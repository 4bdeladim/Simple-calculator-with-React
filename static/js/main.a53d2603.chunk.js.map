{"version":3,"sources":["Data.js","Calculator.js","App.js","index.js"],"names":["row1Nums","row2Nums","row3Nums","row4Nums","Calculator","useState","number","setnumber","history","setHistory","status","setstatus","operator","setOperator","screenHandler","e","target","value","length","className","map","num","onClick","substr","parseFloat","substring","href","App","ReactDOM","render","document","getElementById"],"mappings":"2MAAaA,EAAW,CACpB,EAAG,EAAG,GAEGC,EAAW,CACpB,EAAG,EAAG,GAEGC,EAAW,CACpB,EAAG,EAAG,GAEGC,EAAW,CACpB,EAAG,KCoIQC,G,MA1II,WAAO,IAAD,EACOC,mBAAS,GADhB,mBACdC,EADc,KACNC,EADM,OAESF,mBAAS,GAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGOJ,oBAAS,GAHhB,mBAGdK,EAHc,KAGNC,EAHM,OAIWN,mBAAS,IAJpB,mBAIdO,EAJc,KAIJC,EAJI,KAMfC,EAAgB,SAACC,IACJ,IAAXL,GAEIH,EADW,IAAXD,EACUS,EAAEC,OAAOC,MAETX,EAASS,EAAEC,OAAOC,OAGd,KAAlBX,EAAOY,QACPP,GAAU,IAoElB,OACI,sBAAKQ,UAAU,YAAf,UACI,sBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,UAAd,cAA0BX,EAA1B,OACA,qBAAIW,UAAU,OAAd,cAAuBb,EAAvB,UAGJ,sBAAKa,UAAU,iBAAf,UACI,sBAAKA,UAAU,OAAf,UACKnB,EAASoB,KAAI,SAACC,GAAD,OACV,wBAAQF,UAAU,MAAMF,MAAOI,EAAKC,QAASR,EAA7C,SAA8DO,OAElE,wBAAQF,UAAU,YAAYG,QA7D1B,WAChBb,EAAWH,GACI,IAAXA,GACAC,EAAU,KAEdM,EAAY,SACZF,GAAU,IAuDE,eAGA,wBAAQQ,UAAU,kBAAkBG,QAzBpC,WACZX,GAAU,GACVJ,EAAU,GACVE,EAAW,IAsBC,kBAIJ,sBAAKU,UAAU,OAAf,UACKlB,EAASmB,KAAI,SAACC,GAAD,OACV,wBAAQF,UAAU,MAAMF,MAAOI,EAAKC,QAASR,EAA7C,SAA8DO,OAElE,wBAAQF,UAAU,WAAWG,QA/D1B,WACfb,EAAWH,GACI,IAAXA,GACAC,EAAU,KAEdM,EAAY,QACZF,GAAU,IAyDE,eAGA,wBAAQQ,UAAU,aAAaG,QA9B/B,WACZf,EAAUD,EAAOiB,OAAO,EAAGjB,EAAOY,OAAS,KA6B/B,oBAIJ,sBAAKC,UAAU,OAAf,UACKjB,EAASkB,KAAI,SAACC,GAAD,OACV,wBAAQF,UAAU,MAAMF,MAAOI,EAAKC,QAASR,EAA7C,SAA8DO,OAElE,wBAAQF,UAAU,YAAYG,QA1F1B,WAChBb,EAAWH,GACI,IAAXA,GACAC,EAAU,KAEdI,GAAU,IAqFE,kBAIJ,sBAAKQ,UAAU,OAAf,UACKhB,EAASiB,KAAI,SAACC,GAAD,OACV,wBAAQF,UAAU,MAAMF,MAAOI,EAAKC,QAASR,EAA7C,SAA8DO,OAElE,wBAAQF,UAAU,YAAYF,MAAM,IAAIK,QAzGrC,WACfb,EAAWH,GACI,IAAXA,GACAC,EAAU,KAEdI,GAAU,IAoGE,eAGA,wBAAQQ,UAAU,aAAaG,QA5E3B,WACC,UAAbV,IACAL,EAAUiB,WAAWhB,GAAWgB,WAAWlB,EAAOmB,UAAU,KAC5Dd,GAAU,GACVF,EAAW,IAEE,SAAbG,GACAL,EAAUiB,WAAWhB,GAAWgB,WAAWlB,EAAOmB,UAAU,KAC5Dd,GAAU,GACVF,EAAW,IAEI,GAAXD,IACAD,EAAUiB,WAAWlB,GAAUkB,WAAWhB,IAC1CC,EAAW,GACXE,GAAU,KA8DN,qBAKR,oBAAGQ,UAAU,SAAb,wBAAiC,mBAAGO,KAAK,+BAA+BP,UAAU,OAAjD,uBAAjC,YC7HGQ,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCHNS,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a53d2603.chunk.js","sourcesContent":["export const row1Nums = [\n    7, 8, 9,\n];\nexport const row2Nums = [\n    4, 5, 6,\n];\nexport const row3Nums = [\n    1, 2, 3,\n];\nexport const row4Nums = [\n    0, '.', \n];\n","import React, { useState } from 'react'\nimport { row1Nums, row2Nums, row3Nums, row4Nums } from './Data'\nimport './Calculator.css'\n\nconst Calculator = () => {\n    const [number, setnumber] = useState(0);\n    const [history, setHistory] = useState(0);\n    const [status, setstatus] = useState(true);\n    const [operator, setOperator] = useState('')\n\n    const screenHandler = (e) => {\n        if (status === true) {\n            if (number === 0) {\n                setnumber(e.target.value)\n            } else {\n                setnumber(number + e.target.value)\n            }\n        }\n        if (number.length === 22) {\n            setstatus(false)\n        }\n\n\n    }\n    const handlePlus = () => {\n        setHistory(number)\n        if (number !== 0) {\n            setnumber('+')\n        }\n        setstatus(true)\n    }\n    const handleMinus = () => {\n        setHistory(number)\n        if (number !== 0) {\n            setnumber('-')\n        }\n        setstatus(true)\n    }\n    const handleQisma = () => {\n        setHistory(number)\n        if (number !== 0) {\n            setnumber('/')\n        }\n        setOperator('qisma')\n        setstatus(true)\n    }\n\n    const handledarb = () => {\n        setHistory(number)\n        if (number !== 0) {\n            setnumber('x')\n        }\n        setOperator('darb')\n        setstatus(true)\n    }\n\n    const handleequal = () => {\n        if (operator === 'qisma') {\n            setnumber(parseFloat(history) / parseFloat(number.substring(1)))\n            setstatus(false)\n            setHistory(0)\n        }\n        if (operator === 'darb') {\n            setnumber(parseFloat(history) * parseFloat(number.substring(1)))\n            setstatus(false)\n            setHistory(0)\n        } else {\n            if (history != 0) {\n                setnumber(parseFloat(number) + parseFloat(history))\n                setHistory(0)\n                setstatus(false)\n            }\n\n        }\n\n    }\n\n    const handleC = () => {\n        setstatus(true)\n        setnumber(0)\n        setHistory(0)\n    }\n\n    const handleD = () => {\n        setnumber(number.substr(0, number.length - 1))\n    }\n\n    return (\n        <div className='container' >\n            <div className='screen'>\n                <h5 className='history'> {history} </h5>\n                <h1 className='nums'> {number} </h1>\n\n            </div>\n            <div className='btns-container'>\n                <div className='row1'>\n                    {row1Nums.map((num) => (\n                        <button className=\"btn\" value={num} onClick={screenHandler} >{num}</button>\n                    ))}\n                    <button className='qisma btn' onClick={handleQisma} >\n                        /\n                </button>\n                    <button className='delete-all btn ' onClick={handleC}>\n                        C\n                </button>\n                </div>\n                <div className='row2'>\n                    {row2Nums.map((num) => (\n                        <button className=\"btn\" value={num} onClick={screenHandler} >{num}</button>\n                    ))}\n                    <button className='darb btn' onClick={handledarb}>\n                        *\n                </button>\n                    <button className='delete btn' onClick={handleD}>\n                        DEL\n                </button>\n                </div>\n                <div className='row3'>\n                    {row3Nums.map((num) => (\n                        <button className=\"btn\" value={num} onClick={screenHandler} >{num}</button>\n                    ))}\n                    <button className='minus btn' onClick={handleMinus} >\n                        -\n                </button>\n                </div>\n                <div className='row4'>\n                    {row4Nums.map((num) => (\n                        <button className=\"btn\" value={num} onClick={screenHandler} >{num}</button>\n                    ))}\n                    <button className='plus btn ' value='+' onClick={handlePlus}>\n                        +\n                </button>\n                    <button className='equal btn ' onClick={handleequal}>\n                        =\n                </button>\n                </div>\n            </div>\n            <p className='writes'>created by <a href='https://github.com/4bdeladim' className='name'>Abdeladim</a> </p>\n        </div>\n    )\n}\n\nexport default Calculator\n","import React from 'react'\nimport './App.css';\nimport Calculator from './Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}